kotlin.code.style=official



# When set to true, Gradle will reuse task outputs from any previous build,
# when possible, resulting is much faster builds.
org.gradle.caching=true


# When set to true, individual input property hashes and the build cache key
# for each task are logged on the console.
org.gradle.caching.debug=false


# Enables incubating configuration on demand,
# where Gradle will attempt to configure only necessary projects.
#org.gradle.configureondemand=false


# Customize console output coloring or verbosity.
# Default depends on how Gradle is invoked.
# auto,plain,rich,verbose
org.gradle.console=rich


# When set to true the Gradle Daemon is used to run the build. Default is true.
org.gradle.daemon=true


# Gradle Daemon will terminate itself after specified number of idle milliseconds.
# Default is 10800000 (3 hours).
org.gradle.daemon.idletimeout=10800000


# When set to true, Gradle will run the build with remote debugging enabled,
# listening on port 5005. Note that this is the equivalent of adding
# -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005
# to the JVM command line and will suspend the virtual machine
# until a debugger is attached. Default is false.
org.gradle.debug=false


# Specifies the Java home for the Gradle build process.
# The value can be set to either a jdk or jre location, however,
# depending on what your build does, using a JDK is safer.
# A reasonable default is derived from your environment
# (JAVA_HOME or the path to java) if the setting is unspecified.
# This does not affect the version of Java used to launch the Gradle client VM (see Environment variables).
#org.gradle.java.home=(path to JDK home)


# Specifies the JVM arguments used for the Gradle Daemon.
# The setting is particularly useful for configuring JVM memory settings for build performance.
# This does not affect the JVM settings for the Gradle client VM.
org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8


# When set to quiet, warn, lifecycle, info, or debug, Gradle will use this log level.
# The values are not case sensitive. The lifecycle level is the default.
# quiet,warn,lifecycle,info,debug
org.gradle.logging.level=info


# When configured, Gradle will fork up to org.gradle.workers.max JVMs
# to execute projects in parallel.
org.gradle.parallel=false


# Specifies the scheduling priority for the Gradle daemon and
# all processes launched by it. Default is normal.
# low,normal
org.gradle.priority=normal


# Configures verbose logging when watching the file system. Default is off.
org.gradle.vfs.verbose=false


# Toggles watching the file system. When enabled Gradle re-uses information it collects
# about the file system between builds. Enabled by default on operating systems
# where Gradle supports this feature.
org.gradle.vfs.watch=false


# When set to all, summary or none, Gradle will use different warning type display.
# all,fail,summary,none
org.gradle.warning.mode=all


# When configured, Gradle will use a maximum of the given number of workers.
# Default is number of CPU processors.
#org.gradle.workers.max=
